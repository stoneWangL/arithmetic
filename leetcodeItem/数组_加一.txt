题目：
给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。

最高位数字存放在数组的首位， 数组中每个元素只存储一个数字。

你可以假设除了整数 0 之外，这个整数不会以零开头。

示例 1:

输入: [1,2,3]
输出: [1,2,4]
解释: 输入数组表示数字 123。
示例 2:

输入: [4,3,2,1]
输出: [4,3,2,2]
解释: 输入数组表示数字 4321。


code：
思路：
“由整数组成的非空数组所表示的非负整数”，第一次提交的时候没理解好这句话的意思。。。要是有一个示例输入：
[9]，输出[1, 0]就好了
只有一种情况要增加数组长度，就是999999。其他情况就加一，取余变0 ，进位就可以了。

class Solution {
    public int[] plusOne(int[] digits) {
        for(int i = digits.length - 1; i >= 0; i--){
            digits[i]++;
            digits[i] %= 10;
            if(digits[i] != 0) return digits;
        }
        
        int[] aux = new int[digits.length + 1];
        aux[0] = 1;
        return aux;
    }
}
