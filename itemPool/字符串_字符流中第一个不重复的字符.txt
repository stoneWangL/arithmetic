时间限制：1秒 空间限制：32768K 热度指数：90440
本题知识点： 字符串
 算法知识视频讲解
题目描述
请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符"go"时，
第一个只出现一次的字符是"g"。当从该字符流中读出前六个字符“google"时，第一个只出现一次的字符是"l"。
输出描述:
如果当前字符流没有存在出现一次的字符，返回#字符。

题设：
public class Solution {
    //Insert one char from stringstream
    public void Insert(char ch)
    {
        
    }
  //return the first appearence once char in current stringstream
    public char FirstAppearingOnce()
    {
    
    }
}

我的答案：
/*
一个字符对应8位2进制，所以字符对应的二进制的数转化为10进制0~2^8-1即256种状态，
简单说一位2进制有2种状态0和1，可以表示2个数，以此类推
*/
public class Solution {
    StringBuilder strb = new StringBuilder();
    int[] arr = new int[256];
    //Insert one char from stringstream
    public void Insert(char ch)
    {
        strb.append(ch);
        if(arr[ch] == 0)
            arr[ch] = 1;
        else if(arr[ch] == 1)
            arr[ch] = 2;
    }
  //return the first appearence once char in current stringstream
    public char FirstAppearingOnce()
    {
        char[] cha = new char[256];
        cha = strb.toString().toCharArray();
        for(char c : cha){
            if(arr[c] == 1)
                return c;
        }
        return '#';
    }
}