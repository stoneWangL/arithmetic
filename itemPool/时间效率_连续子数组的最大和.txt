时间限制：1秒 空间限制：32768K 热度指数：170510
本题知识点： 数组
 算法知识视频讲解
题目描述
HZ偶尔会拿些专业问题来忽悠那些非计算机专业的同学。今天测试组开完会后,
他又发话了:在古老的一维模式识别中,常常需要计算连续子向量的最大和,
当向量全为正数的时候,问题很好解决。但是,如果向量中包含负数,是否应该包含某个负数,
并期望旁边的正数会弥补它呢？例如:{6,-3,-2,7,-15,1,2,2},连续子向量的最大和为8(从第0个开始,到第3个为止)。
给一个数组，返回它的最大连续子序列的和，你会不会被他忽悠住？(子向量的长度至少是1)

题设：
public class Solution {
    public int FindGreatestSumOfSubArray(int[] array) {
        
    }
}



我的答案：
public class Solution {
    public int FindGreatestSumOfSubArray(int[] array) {
        if(array == null || array.length == 0)
            return 0;
        int total, count;
        count = total = array[0];
        for(int i = 1; i < array.length; i++){
            //如果total小于0，那么0加上当前array[0]也比小于0的total加上array[0]要大；
            //只要total大于0就需要加上
            if(total <= 0 )
                total = array[i];
            else
                total += array[i];
            if(total > count)
                count = total;
        }
        return count;
    }
}