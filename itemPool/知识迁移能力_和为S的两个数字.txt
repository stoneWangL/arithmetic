时间限制：1秒 空间限制：32768K 热度指数：151640
 算法知识视频讲解
题目描述
输入一个递增排序的数组和一个数字S，在数组中查找两个数，使得他们的和正好是S，
如果有多对数字的和等于S，输出两个数的乘积最小的。
输出描述:
对应每个测试案例，输出两个数，小的先输出。

我的答案：
import java.util.ArrayList;
public class Solution {
    public ArrayList<Integer> FindNumbersWithSum(int [] array,int sum) {
        ArrayList<Integer> findList = new ArrayList<>();
        for(int i = 0; i < array.length; i++){
            //第二个数就从比前一个数大的开始，不然就有一部分重复了，浪费时间
            for(int j = i + 1; j < array.length; j++){
                //由于数组的递增的，array[j]是最大的，一旦array[j]比sum都大，说明，后面也不用比了，肯定大
                if(array[j] > sum)
                    break;
                if(array[i] + array[j] == sum){
                    //首次add
                    if(findList.size() == 0){
                        findList.add(array[i]);
                        findList.add(array[j]);
                    //非首次，就需要比较，如果条件OK，就替换
                    }else if(array[i] * array[j] < findList.get(0) * findList.get(1)){
                        findList.set(0, array[i]);
                        findList.set(1, array[j]);
                    }
                }
            }
        }
        return findList;
    }
}