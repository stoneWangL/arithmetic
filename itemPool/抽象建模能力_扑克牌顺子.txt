时间限制：1秒 空间限制：32768K 热度指数：133133
本题知识点： 字符串
 算法知识视频讲解
题目描述
LL今天心情特别好,因为他去买了一副扑克牌,发现里面居然有2个大王,2个小王(一副牌原本是54张^_^)...
他随机从中抽出了5张牌,想测测自己的手气,看看能不能抽到顺子,如果抽到的话,他决定去买体育彩票,嘿嘿！！
“红心A,黑桃3,小王,大王,方片5”,“Oh My God!”不是顺子.....LL不高兴了,他想了想,决定大\小 王可以看成任何数
字,并且A看作1,J为11,Q为12,K为13。上面的5张牌就可以变成“1,2,3,4,5”(大小王分别看作2和4),“So Lucky!”。
LL决定去买体育彩票啦。 现在,要求你使用这幅牌模拟上面的过程,然后告诉我们LL的运气如何， 如果牌能组成顺子
就输出true，否则就输出false。为了方便起见,你可以认为大小王是0。

题设：
public class Solution {
    public boolean isContinuous(int [] numbers) {

    }
}


我的答案：
/*
策略分析：
首先数组内只有5个数，统计王/0的数目为king，排除0（王）后，找到最小值min和最大值max，max-min<=4,否则返回false
5个数一旦有重复，返回false，

*/
public class Solution {
    public boolean isContinuous(int [] numbers) {
        if(numbers.length == 0)
            return false;
        //先检查重复性(除0外的)
        int max = numbers[0], min = -1, temp;
        int[] num = new int[14];
        for(int i = 0; i < 5; i++){
            temp = numbers[i];
            num[temp]++;
            if(temp > max)
                max = temp;
        }
        //除0外，一旦有重复，就不可能为顺子
        //j代表的是卡片数字,num[j]代表的是j出现的次数
        for(int j = 1; j <= 13; j++){
            //如果min还没有被赋值，而且j只出现了1次，那这个j就是min
            if(min == -1 && num[j] == 1){
                min = j;
            }
            if(num[j] >= 2)
                return false;
        }
        //假如，除0外的min和max的间距过大，则不可能为顺子
        if(max - min > 4)
            return false;
        return true;
    }
}