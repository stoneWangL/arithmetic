时间限制：1秒 空间限制：32768K 热度指数：124708
 算法知识视频讲解
题目描述
给定一个数组和滑动窗口的大小，找出所有滑动窗口里数值的最大值。
例如，如果输入数组{2,3,4,2,6,2,5,1}及滑动窗口的大小3，那么一共存在6个滑动窗口，
他们的最大值分别为{4,4,6,6,6,5}； 针对数组{2,3,4,2,6,2,5,1}的滑动窗口有以下6个： 
{[2,3,4],2,6,2,5,1}， {2,[3,4,2],6,2,5,1}， {2,3,[4,2,6],2,5,1}， {2,3,4,[2,6,2],5,1}， 
{2,3,4,2,[6,2,5],1}， {2,3,4,2,6,[2,5,1]}。

题设：
public class Solution {
    public ArrayList<Integer> maxInWindows(int [] num, int size)
    {
        
    }
}



我的答案：
import java.util.*;
public class Solution {
    public ArrayList<Integer> maxInWindows(int [] num, int size)
    {
        ArrayList<Integer> maxList = new ArrayList<>();
        if(num.length == 0 || size > num.length || size < 1)
            return maxList;
        int[] sizeNum = new int[size];
        //i代表窗口中最前一位在num数组中的下标
        for(int i = 0; i + size <= num.length; i++){
            for(int j = 0; j < size; j++){//j代表窗口数组中数组元素的下标
                sizeNum[j] = num[i+j];
            }
            maxList.add(MaxNum(sizeNum, size));
        }
        return maxList;
    }
    
    private int MaxNum(int[] sizeNum, int size){
        Arrays.sort(sizeNum);
        return sizeNum[size - 1];
    }
}