时间限制：1秒 空间限制：32768K 热度指数：140517
 算法知识视频讲解
题目描述
给定一棵二叉搜索树，请找出其中的第k小的结点。
例如， （5，3，7，2，4，6，8）    中，按结点数值大小顺序第三小结点的值为4。

题设：
/*
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
public class Solution {
    TreeNode KthNode(TreeNode pRoot, int k)
    {
        
    }


}

我的答案：
/*
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
public class Solution {
    int num = 0;//计数器
    //思路：二叉搜索树按照中序遍历的顺序打印出来正好就是排序好的顺序。
    TreeNode KthNode(TreeNode pRoot, int k)
    {
        if(pRoot != null){
            TreeNode node = KthNode(pRoot.left, k);
            if(node != null)
                return node;//该node只能将找到的pRoot逐层返回出递归
            
            num++;
            if(num == k)
                return pRoot;
            
            node = KthNode(pRoot.right, k);
            if(node != null)
                return node;//该node只能将找到的pRoot逐层返回出递归
        }
        return null;
    }


}
        return null;
    }


}