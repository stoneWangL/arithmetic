时间限制：1秒 空间限制：32768K 热度指数：446661

题目描述
输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。
假设输入的前序遍历和中序遍历的结果中都不含重复的数字。
例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。

题设：
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode reConstructBinaryTree(int [] pre,int [] in) {
        
    }
}











思路：
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode reConstructBinaryTree(int [] pre,int [] in) {
        TreeNode root = FuncTree(pre, 0, pre.length-1, in, 0, pre.length-1);
        return root;
    }
    private TreeNode FuncTree(int[] pre, int startPre, int endPre, int[] in, int startIn, int endIn){
        if(startPre>endPre || startIn>endIn)
            return null;
        TreeNode root = new TreeNode(pre[startPre]);
        for(int i=0; i<=endIn; i++){
            if(in[i] == pre[startPre]){
                root.left = FuncTree(pre,startPre+1,startPre+i-startIn,in,startIn,i-1);
                root.right = FuncTree(pre,startPre+i-startIn+1,endPre,in,i+1,endIn);
                break;
            }
        }
        return root;
    }
}